#! /bin/sh /usr/share/dpatch/dpatch-run
## 01_terminal_timeout.dpatch by Andres Salomon <dilinger@debian.org>
## improved by David HÃ¤rdeman <david@2gen.com>
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: restore terminal state before timeout

@DPATCH@

--- cryptsetup-1.0.4~rc2/lib/setup.c
+++ cryptsetup-1.0.4~rc2/lib/setup.c
@@ -102,28 +102,37 @@
 {
 	struct termios orig, tmp;
 	int failed = -1;
+	int infd, outfd;
 
 	if (maxlen < 1)
 		goto out_err;
 
-	if (tcgetattr(STDIN_FILENO, &orig)) {
+	/* Read and write to /dev/tty if available */
+	if ((infd = outfd = open("/dev/tty", O_RDWR)) == -1) {
+		infd = STDIN_FILENO;
+		outfd = STDERR_FILENO;
+	}
+
+	if (tcgetattr(infd, &orig)) {
 		set_error("Unable to get terminal");
 		goto out_err;
 	}
 	memcpy(&tmp, &orig, sizeof(tmp));
 	tmp.c_lflag &= ~ECHO;
 
-	write(STDOUT_FILENO, prompt, strlen(prompt));
-	tcsetattr(STDIN_FILENO, TCSAFLUSH, &tmp);
+	write(outfd, prompt, strlen(prompt));
+	tcsetattr(infd, TCSAFLUSH, &tmp);
 	if (timeout)
-		failed = timed_read(STDIN_FILENO, pass, maxlen, timeout);
+		failed = timed_read(infd, pass, maxlen, timeout);
 	else
-		failed = untimed_read(STDIN_FILENO, pass, maxlen);
-	tcsetattr(STDIN_FILENO, TCSAFLUSH, &orig);
+		failed = untimed_read(infd, pass, maxlen);
+	tcsetattr(infd, TCSAFLUSH, &orig);
 
 out_err:
 	if (!failed)
-		write(STDOUT_FILENO, "\n", 1);
+		write(outfd, "\n", 1);
+	if (infd != STDIN_FILENO)
+		close(infd);
 	return failed;
 }
 
