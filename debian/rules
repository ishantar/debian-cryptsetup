#!/usr/bin/make -f

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1

DEB_VERSION := $(strip $(shell LC_ALL=C dpkg-parsechangelog          |          \
                               egrep '^Version:' | head -n1 | cut -f2 -d ' '    ))
DEB_DATE    := $(strip $(shell LC_ALL=C dpkg-parsechangelog          |          \
                               egrep '^Date:'    | head -n1 | cut -f2- -d ' ' | \
                               LC_ALL=C date --file=- +%F                       ))

# These are used for cross-compiling and for saving the configure script
# from having to guess our platform (since we know it already)
export DEB_HOST_GNU_TYPE  ?= $(shell dpkg-architecture -qDEB_HOST_GNU_TYPE)
export DEB_BUILD_GNU_TYPE ?= $(shell dpkg-architecture -qDEB_BUILD_GNU_TYPE)

ifeq ($(DEB_BUILD_GNU_TYPE), $(DEB_HOST_GNU_TYPE))
  confflags += --build $(DEB_HOST_GNU_TYPE)
else
  confflags += --build $(DEB_BUILD_GNU_TYPE) --host $(DEB_HOST_GNU_TYPE)
endif

CFLAGS = -Wall -g

ifneq (,$(findstring noopt,$(DEB_BUILD_OPTIONS)))
	CFLAGS += -O0
else
	CFLAGS += -O2
endif
ifeq (,$(findstring nostrip,$(DEB_BUILD_OPTIONS)))
	INSTALL_PROGRAM += -s
endif
ifneq (,$(filter parallel=%,$(DEB_BUILD_OPTIONS)))
    NUMJOBS = $(patsubst parallel=%,%,$(filter parallel=%,$(DEB_BUILD_OPTIONS)))
    MAKEFLAGS += -j$(NUMJOBS)
endif

# Include quilt stuff.
include /usr/share/quilt/quilt.make

configure: configure-stamp
configure-stamp: $(QUILT_STAMPFN)
	dh_testdir
	find -xtype f ! -name manifest > manifest
	# mini autogen.sh
	rm -f ltmain.sh
	cp /usr/share/libtool/ltmain.sh ltmain.sh
	libtoolize --force --copy
	aclocal-1.9
	autoheader
	automake-1.9 --add-missing --gnu
	autoconf
	CFLAGS="$(CFLAGS)" ./configure $(confflags) \
		--prefix=/usr \
		--sbindir=/sbin \
		--mandir=/usr/share/man
		#--enable-static \
	find -xtype f > manifest.new
	diff manifest manifest.new | grep '>' | cut -b3- > config.mess
	touch $@

build: build-stamp
build-stamp: configure-stamp
	dh_testdir
	sed 's/VERSION/$(DEB_VERSION)/;s/DATE/$(DEB_DATE)/' \
		debian/doc/variables.xml.in > debian/doc/variables.xml
	xsltproc --nonet --xinclude -o debian/doc/					\
		/usr/share/xml/docbook/stylesheet/nwalsh/manpages/docbook.xsl	\
		debian/doc/manpages.xml
	pod2man --section=8 --center="Administrative commands" --release="" debian/scripts/luksformat \
		debian/luksformat.8
	$(MAKE)
	# cannot depend on libraries in /usr !
	gcc lib/.libs/*.o src/*.o luks/.libs/*.o -o src/cryptsetup.static \
		-lpopt -ldevmapper -luuid /usr/lib/libgcrypt.a /usr/lib/libgpg-error.a
	gcc -Wall -pedantic -std=c99 debian/askpass.c -o debian/askpass
	gcc -Wall -pedantic -std=c99 debian/passdev.c -o debian/scripts/passdev
	touch $@

clean: unpatch
	dh_testdir
	dh_testroot
	if test -f Makefile; then $(MAKE) clean; fi
	if test -f config.mess; then rm -f `cat config.mess`; fi
	rm -f debian/luksformat.8
	rm -f debian/doc/*.[0-9] debian/doc/variables.xml
	rm -f debian/scripts/passdev
	rm -f debian/askpass
	rm -f config.mess
	rm -rf autom4te.cache 
	rm -f src/cryptsetup.static
	dh_clean configure-stamp build-stamp install-stamp

install: install-stamp
install-stamp: build-stamp
	dh_testdir
	dh_testroot
	dh_clean
	dh_installdirs
	mkdir -p $(CURDIR)/debian/cryptsetup-udeb/
	$(MAKE) DESTDIR=$(CURDIR)/debian/cryptsetup install
	cp src/cryptsetup.static $(CURDIR)/debian/cryptsetup/sbin/cryptsetup
	install -m 0644 debian/cryptdisks.functions $(CURDIR)/debian/cryptsetup/lib/cryptsetup/
	install -m 0755 debian/checks/* $(CURDIR)/debian/cryptsetup/lib/cryptsetup/checks/
	install -m 0755 debian/scripts/luksformat $(CURDIR)/debian/cryptsetup/usr/sbin/
	install -m 0755 debian/scripts/cryptdisks_start $(CURDIR)/debian/cryptsetup/usr/sbin/
	install -m 0755 debian/scripts/cryptdisks_stop $(CURDIR)/debian/cryptsetup/usr/sbin/
	install -m 0755 debian/scripts/decrypt_* $(CURDIR)/debian/cryptsetup/lib/cryptsetup/scripts/
	install -m 0755 debian/scripts/passdev $(CURDIR)/debian/cryptsetup/lib/cryptsetup/scripts/
	install -m 0755 debian/initramfs/cryptpassdev-hook \
		$(CURDIR)/debian/cryptsetup/usr/share/initramfs-tools/hooks/cryptpassdev
	install -m 0755 debian/initramfs/cryptroot-hook \
		$(CURDIR)/debian/cryptsetup/usr/share/initramfs-tools/hooks/cryptroot
	install -m 0755 debian/initramfs/cryptroot-script \
		$(CURDIR)/debian/cryptsetup/usr/share/initramfs-tools/scripts/local-top/cryptroot
	install -m 0644 debian/initramfs/cryptroot-conf \
		$(CURDIR)/debian/cryptsetup/usr/share/initramfs-tools/conf-hooks.d/cryptsetup
	install -m 0755 debian/initramfs/cryptopenct-hook \
		$(CURDIR)/debian/cryptsetup/usr/share/initramfs-tools/hooks/cryptopenct
	install -m 0755 debian/initramfs/cryptopensc-hook \
		$(CURDIR)/debian/cryptsetup/usr/share/initramfs-tools/hooks/cryptopensc
	install -m 0755 debian/initramfs/cryptopensc-script-local-top \
		$(CURDIR)/debian/cryptsetup/usr/share/initramfs-tools/scripts/local-top/cryptopensc
	install -m 0755 debian/initramfs/cryptopensc-script-local-bottom \
		$(CURDIR)/debian/cryptsetup/usr/share/initramfs-tools/scripts/local-bottom/cryptopensc
	install -m 0644 debian/bash_completion $(CURDIR)/debian/cryptsetup/etc/bash_completion.d/cryptsetup
	install -m 0755 debian/askpass $(CURDIR)/debian/cryptsetup/lib/cryptsetup/askpass
	rmdir $(CURDIR)/debian/cryptsetup/usr/lib/cryptsetup
	touch $@

binary-indep: build install
# We have nothing to do by default.

binary-arch: build install
	dh_testdir
	dh_testroot
	dh_installchangelogs -a ChangeLog
	dh_installdocs -a
	dh_installexamples -a debian/scripts/gen-ssl-key debian/scripts/gen-old-ssl-key debian/usbcrypto.udev
	dh_installinit -a --no-start --name=cryptdisks-early --update-rcd-params="start 26 S . start 59 0 6 ."
	dh_installinit -a --no-start --name=cryptdisks --update-rcd-params="start 28 S . start 48 0 6 ."
	dh_installman -a debian/doc/crypttab.5 debian/doc/cryptdisks_start.8 debian/doc/cryptdisks_stop.8 debian/luksformat.8
	dh_installudev -a
	cp -a $(CURDIR)/debian/cryptsetup/etc $(CURDIR)/debian/cryptsetup-udeb/
	cp -a $(CURDIR)/debian/cryptsetup/lib $(CURDIR)/debian/cryptsetup-udeb/
	cp -a $(CURDIR)/debian/cryptsetup/sbin $(CURDIR)/debian/cryptsetup-udeb/
	# Get rid of libcryptsetup.so since it has no stable API.
	# We instead statically link the relevant code
	# into the cryptsetup executable, so the .so is not needed.
	rm -rf $(CURDIR)/debian/cryptsetup/usr/lib
	dh_strip -a
	dh_compress -a
	dh_fixperms -a
	dh_makeshlibs -a
	dh_installdeb -a
	dh_shlibdeps -a
	dh_gencontrol -a
	dh_md5sums -a
	dh_builddeb -a

binary: binary-indep binary-arch
.PHONY: configure build clean install binary-indep binary-arch binary patch unpatch
