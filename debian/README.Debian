Cryptsetup for Debian
---------------------

 Cryptsetup is a command-line interface for configuring encrypted block
devices via dm-crypt, a kernel device-mapper target.
The Debian cryptsetup package provides the initscript /etc/init.d/cryptdisks
and a configuration file /etc/crypttab for automatically configuring
encrypted devices at boot time. See man crypttab(5) for more information.

 The /sbin/luksformat script provides a simple interface for creating an
encrypted device that follows the LUKS standard and for putting a file system
onto the encrypted device. See man luksformat(8) for more information.

For instructions about how to encrypt your swap partition(s), see
	/usr/share/doc/cryptsetup/CryptoSwap.HowTo

For instructions about how to encrypt your root filesystem, see
	/usr/share/doc/cryptsetup/CryptoRoot.HowTo


Insecure mode/owner for keys
----------------------------

 Any key that is stored somewhere to be used with cryptsetup should have the
mode 400 (-r--------) and owner/group root. This way only root has permissions
to read the file. 'chown root.root keyfile' and 'chmod 400 keyfile' will do
the trick for you.

 If a key is stored on a vfat filesystem (very common for removable media),
chmod and chown will not work. The vfat filesytem (and several others too)
does not support file permissions and ownership. Instead, you should use the 
uid, gid and umask options in /etc/fstab to ensure secure permissions for the
key.

 As an example, assume that /dev/sdg2 is the removable media containing
keyfiles on a vfat filesystem and that it is going to be mounted on 
/media/flash0. The configuration in /etc/fstab should then be something
like this:

# <file system>	<mount point>	<type>	<options>		<dump>	<pass>
/dev/sdg2	/media/flash0	vfat	uid=0,gid=0,umask=277	0	0

 If you are using udev, it might be a good idea to use the /dev/disk/by-label
links instead of /dev/sdg2 as the link will work no matter in which order the
media is inserted and detected.

The 'check' option
------------------

 The 'check' option in crypttab allows to configure checks to be run against
the target device after cryptsetup has been invoked.
The default check 'vol_id' can check for any known filesystem type, as it uses
vol_id from udev. you can check for a particular filesystem by giving for
example 'checkargs=ext2' or 'checkargs=swap' as an option in /etc/crypttab.

 The 'precheck' option is for configuring checks to be run against the source
device before cryptsetup has been invoked. They are only available for plain
cryptsetup devices. LUKS devices have a hardcoded precheck that uses the
'isLuks' command of cryptsetup.
As there is no way to check a device for plain cryptsetup data, you can only
check for data that should not be on the device. for example the check could
search for common filesystems on the device, and abort if it finds any.
As this will never really ensure that no data is lost, the package doesn't
provide such a check.
Another example for a precheck could be to check the partition table id. For
a device that shall be used as swap partition, it could verify that only
partitions with type 'swap' (82) are used for encrypted swap.

 Please send us your checks, if you write new ones. If they are generally
useful, we will include them in the package.

 See CheckSystem.Doc and man crypttab(5) for more information about the
checksystem.

 -- Jonas Meurer <mejo@debian.org>, Sun, 30 Jul 2006 21:53:56 +0200
