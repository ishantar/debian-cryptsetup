this is the documentation for implementing a robust check system
    into /etc/init.d/cryptdisks!


things marked with default should be checked always...

we should only check things per default if one of OUR actions causes dataloss!

it should be 100% clear, that none of our checks cause any  modifications to the
underlying device.

the user should be able to deaktivate the default checks through some option in
crypttab.


there are a few branches:


##
# swap
##
    no luks allowed with swap option, because it's useless
precheck:
    - check if the device exists (default)
    - check if the partition has a swap id (82) (default)
        - if no, check for known filesystems
            - if we find a known filesystem, abort
    - maybe a check for suspend/resume (there are reported problems
        with some of this on grml, but are not restricted to grml) (?default?)
    - mkswap
postcheck:
    uesless

note to swap:
imho it's the useres fault to mark a partition with type swap.
Every live-cd will format partitions with type swap.


##
# plain cryptsetup (current solution)
##
precheck:
    - check if the device exists (default)
    - check if there is a known filesystem on the partition.
        - if we find a known filesystem, abort
postcheck: (user should be educated to give us a postcheck=<filesystem on cryptopartition>)
    - check what the user requested us to check
        - if check failed simpy remove the dm-crypt device (in interactive mode 
            reask the password and retry)
        - if check succeeds, everything is fine

if the user doesn't supply a postcheck warn, that we are not able to check if
the user provided us with the right password.


##
# luks
##
precheck:
    - check if the device exists (default)
    - check the partition with isLuks or grep for the signature (default)
        - if it is NOT luks, abort
postcheck:
    - check what the user requested us to check (filesystem, raid, lvm, evms, ...)
        - if check failed just print a warning (user supplied the right password)

